version: '3.7'

volumes:
  data:
  log:
  secrets:

services:
  reverseproxy:
    ports:
      - "44395:44395"
    build:
      context: .
      # NOTE!!!
      # Even though we keep nginx.Dockerfile inside /nginx solution folder,
      # docker-compose tool is not aware of it since it is only a Visual Studio construct.
      # On the filesystem nginx.Dockerfile is on the same level as docker-compose.yml
      dockerfile: nginx/nginx.Dockerfile
    networks:
      sparkrosedigital_templatenet:
        aliases:
          - "api-local.sparkrosedigital_template.com"
  sparkrosedigital_template.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
    env_file: .env
    #ports:
    #  - "5000:5000"
    build:
      context: .
      dockerfile: src/SparkRoseDigital_Template.Api/Dockerfile
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    networks:
      - sparkrosedigital_templatenet
  sparkrosedigital_template.sql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ${DB_ADMIN_PASSWORD}
      MSSQL_PID: Standard
    user: root
    ports:
      - "1433:1433"
    expose:
      - "1433"
    volumes:
      - ./sql:/scripts/
      - data:/var/opt/mssql/data
      - log:/var/opt/mssql/log
      - secrets:/var/opt/mssql/secrets
    command:
      - /bin/bash
      - -c
      - |
        # Launch MSSQL and send to background
        /opt/mssql/bin/sqlservr &
        # Wait 30 seconds for it to be available
        # (lame, I know, but there's no nc available to start prodding network ports)
        sleep 30
        # Run every script in /scripts
        # TODO set a flag so that this is only done once on creation,
        #      and not every time the container runs
        for foo in /scripts/*.sql
          do /opt/mssql-tools/bin/sqlcmd -U sa -P $$SA_PASSWORD -l 30 -e -i $$foo
        done
        # So that the container doesn't shut down, sleep this thread
        sleep infinity
    networks:
      - sparkrosedigital_templatenet
  # Comment the below service back in if you want
  # migrations to happen on docker-compose up.
  # Don't forget to update Migrations project's connection strings.
  #sparkrosedigital_template.migrations:
  #  image: ${DOCKER_REGISTRY-}sparkrosedigital_templatesql
  #  depends_on:
  #    - sparkrosedigital_template.sql
  #  build:
  #    context: .
  #    dockerfile: src/SparkRoseDigital_Template.Migrations/Dockerfile
  #  networks:
  #    - sparkrosedigital_templatenet
  sparkrosedigital_template.workerservices:
    environment:
      - DOTNET_ENVIRONMENT=Development
    image: ${DOCKER_REGISTRY-}sparkrosedigital_templateworkerservices
    env_file: .env
    depends_on:
      - sparkrosedigital_template.sql
    build:
      context: .
      dockerfile: src/SparkRoseDigital_Template.WorkerServices/Dockerfile
    networks:
      - sparkrosedigital_templatenet
  sparkrosedigital_template.seq:
    ports:
      - "5341:80"
    image: datalust/seq
    restart: unless-stopped
    environment:
      - ACCEPT_EULA=Y
    networks:
      - sparkrosedigital_templatenet
  sparkrosedigital_template.smtp:
    ports:
      - "5010:80"
    image: rnwood/smtp4dev
    restart: always
    networks:
      - sparkrosedigital_templatenet
networks:
  sparkrosedigital_templatenet: {}